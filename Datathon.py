import streamlit as st    
from pdfminer.high_level import extract_text
from sentence_transformers import SentenceTransformer
from sklearn.metrics.pairwise import cosine_similarity
import google.generativeai as genai
import re
from dotenv import load_dotenv
import os

# Carrega as vari√°veis de ambiente
load_dotenv()

# Configura a chave da API Gemini
chave_api = os.getenv("GEMINI_API_KEY")
genai.configure(api_key=chave_api)

# Modelo Gemini
modelo_gemini = genai.GenerativeModel("gemini-2.5-flash")

# Inicializa estado da sess√£o
if "iniciou_aplicacao" not in st.session_state:
    st.session_state.iniciou_aplicacao = False
if "formulario_enviado" not in st.session_state:
    st.session_state.formulario_enviado = False
if "curriculo_texto" not in st.session_state:
    st.session_state.curriculo_texto = ""
if "descricao_vaga" not in st.session_state:
    st.session_state.descricao_vaga = ""

# ----------------------------
# CABE√áALHO / ABERTURA DO SITE
# ----------------------------
st.markdown("""
    <div style='text-align: center; padding: 30px 0 10px 0;'>
        <img src='https://raw.githubusercontent.com/SandersonSB/Datathon/main/IA_Gemini_3x0r2u3x0r2u3x0r.png' width='240'/>
        <h1 style='font-size: 42px; color:  #FFA500; margin-bottom: 10px;'>IA na Decision</h1>
        <h4 style='color: #FF8C00; font-weight: normal;'>An√°lise inteligente de curr√≠culos com apoio de intelig√™ncia artificial</h4>
        <hr style='border: 1px solid #ddd; margin-top: 20px;'/>
    </div>
""", unsafe_allow_html=True)

# ----------------------------
# TELA DE IN√çCIO
# ----------------------------
if not st.session_state.iniciou_aplicacao:
    st.markdown("""
    ### üëã Bem-vindo √† plataforma IA na Decision

    Essa plataforma usa **intelig√™ncia artificial** para comparar curr√≠culos com descri√ß√µes de vagas, gerar relat√≥rios autom√°ticos e oferecer insights personalizados.

    Clique no bot√£o abaixo para come√ßar.
    """)

    if st.button("üöÄ Iniciar"):
        st.session_state.iniciou_aplicacao = True
        try:
            st.experimental_rerun()
        except RuntimeError:
            pass

else:
    # ----------------------------
    # ABAS DE FUNCIONALIDADES
    # ----------------------------
    abas = st.tabs([
        "Introdu√ß√£o",
        "An√°lise Pontual",
        "Analisar curr√≠culos em massa no nosso banco de dados"
    ])

    # ----------------------------
    # ABA 1 - INTRODU√á√ÉO
    # ----------------------------
    with abas[0]:
        st.header("Bem-vindo ao IA na Decision!")
        st.markdown("""
        Esta plataforma foi criada para facilitar a triagem e an√°lise de curr√≠culos usando tecnologias modernas de IA.

        **Principais funcionalidades:**
        - üîç An√°lise individual de curr√≠culos com compara√ß√£o √† vaga.
        - üß† Gera√ß√£o de relat√≥rios com pontua√ß√£o e sugest√µes.
        - üìÅ An√°lise em massa de curr√≠culos j√° armazenados.

        Use as abas acima para come√ßar!
        """)

    # ----------------------------
    # FUN√á√ïES AUXILIARES
    # ----------------------------
    def extrair_texto_pdf(arquivo_pdf):
        try:
            return extract_text(arquivo_pdf)
        except Exception as e:
            st.error(f"Erro ao extrair texto do PDF: {str(e)}")
            return ""

    def calcular_similaridade(texto1, texto2):
        modelo_bert = SentenceTransformer('sentence-transformers/all-mpnet-base-v2')
        emb1 = modelo_bert.encode([texto1])
        emb2 = modelo_bert.encode([texto2])
        return cosine_similarity(emb1, emb2)[0][0]

    def gerar_relatorio(curriculo, descricao):
        prompt = f"""
# Contexto:
Voc√™ √© um Analisador de Curr√≠culo com IA. Ser√° fornecido um curr√≠culo e uma descri√ß√£o de vaga.

# Instru√ß√µes:
- Avalie o curr√≠culo com base nas habilidades, experi√™ncias e ader√™ncia √† vaga.
- Para cada ponto-chave, forne√ßa uma nota de 0 a 5, um emoji (‚úÖ, ‚ùå, ‚ö†Ô∏è) e uma explica√ß√£o.
- Finalize com a se√ß√£o "Sugest√µes para melhorar seu curr√≠culo".

# Curr√≠culo do Candidato:
{curriculo}

# Descri√ß√£o da Vaga:
{descricao}
"""
        try:
            resposta = modelo_gemini.generate_content(prompt)
            return resposta.text
        except Exception as e:
            return f"Erro ao chamar a API do Gemini: {e}"

    def extrair_pontuacoes(texto):
        padrao = r'(\d+(?:\.\d+)?)/5'
        correspondencias = re.findall(padrao, texto)
        return [float(p) for p in correspondencias]

    # ----------------------------
    # ABA 2 - AN√ÅLISE PONTUAL
    # ----------------------------
    with abas[1]:
        if not st.session_state.formulario_enviado:
            with st.form("formulario_curriculo"):
                arquivo_curriculo = st.file_uploader("üìÑ Envie seu curr√≠culo em PDF", type="pdf")
                st.session_state.descricao_vaga = st.text_area("üìù Cole aqui a descri√ß√£o da vaga:", placeholder="Descri√ß√£o da vaga...")

                enviado = st.form_submit_button("Analisar")
                if enviado:
                    if arquivo_curriculo and st.session_state.descricao_vaga.strip():
                        st.info("Extraindo informa√ß√µes do curr√≠culo...")
                        st.session_state.curriculo_texto = extrair_texto_pdf(arquivo_curriculo)
                        st.session_state.formulario_enviado = True
                        try:
                            st.experimental_rerun()
                        except RuntimeError:
                            pass
                    else:
                        st.warning("Por favor, envie o curr√≠culo e a descri√ß√£o da vaga.")

        if st.session_state.formulario_enviado:
            progresso = st.info("Gerando an√°lises e pontua√ß√µes...")

            similaridade = calcular_similaridade(st.session_state.curriculo_texto, st.session_state.descricao_vaga)

            col1, col2 = st.columns(2)
            with col1:
                st.write("üéØ Pontua√ß√£o de similaridade (sistemas ATS):")
                st.subheader(f"{similaridade:.2f}")

            relatorio = gerar_relatorio(st.session_state.curriculo_texto, st.session_state.descricao_vaga)
            pontuacoes = extrair_pontuacoes(relatorio)
            media_final = sum(pontuacoes) / (5 * len(pontuacoes)) if pontuacoes else 0

            with col2:
                st.write("üìä Pontua√ß√£o m√©dia da IA:")
                st.subheader(f"{media_final:.2f}")

            progresso.success("‚úÖ An√°lise conclu√≠da com sucesso!")

            st.subheader("üìÉ Relat√≥rio da IA:")
            st.markdown(f"""
                <div style='text-align: left; background-color: #000000; padding: 10px; border-radius: 10px; margin: 5px 0; color: white; white-space: pre-wrap;'>
                    {relatorio}
                </div>
            """, unsafe_allow_html=True)

            st.download_button(
                label="üì• Baixar Relat√≥rio",
                data=relatorio,
                file_name="relatorio_curriculo.txt"
            )

    # ----------------------------
    # ABA 3 - AN√ÅLISE EM MASSA
    # ----------------------------
    with abas[2]:
        st.header("üìÅ Analisar Curr√≠culos em Massa")
        st.markdown("""
        Nesta aba voc√™ poder√° carregar ou acessar automaticamente a base de curr√≠culos da empresa e aplicar an√°lises em lote com IA.

        **O que essa fun√ß√£o permitir√° em breve:**
        - Leitura autom√°tica de curr√≠culos da base.
        - Gera√ß√£o de relat√≥rios para m√∫ltiplos perfis.
        - Exporta√ß√£o em planilhas com indicadores comparativos.

        üîß **Funcionalidade em desenvolvimento.**

        Caso queira ajudar nos testes ou contribuir com ideias, entre em contato conosco:
        [üìß contato@decisionai.com](mailto:contato@decisionai.com)
        """)

        if st.button("üöÄ Iniciar an√°lise em massa (em breve)"):
            st.info("Essa funcionalidade estar√° dispon√≠vel em breve. Fique ligado!")

# ----------------------------
# RODAP√â INSTITUCIONAL
# ----------------------------
st.markdown("""
<hr/>
<div style='text-align: center; font-size: 14px; color: #95a5a6; padding: 10px 0;'>
    Desenvolvido por <strong>Decision AI</strong> ‚Ä¢ ¬© 2025 ‚Ä¢ Todos os direitos reservados
</div>
""", unsafe_allow_html=True)
